{
  "results": {
    "winogender_all": {
      "alias": "winogender_all",
      "acc,none": 0.6361111111111111,
      "acc_stderr,none": 0.017942644109841564
    },
    "winogender_female": {
      "alias": "winogender_female",
      "acc,none": 0.6208333333333333,
      "acc_stderr,none": 0.03138366347111875
    },
    "winogender_gotcha": {
      "alias": "winogender_gotcha",
      "acc,none": 0.6,
      "acc_stderr,none": 0.03168886398119077
    },
    "winogender_gotcha_female": {
      "alias": "winogender_gotcha_female",
      "acc,none": 0.6416666666666667,
      "acc_stderr,none": 0.043956678019200446
    },
    "winogender_gotcha_male": {
      "alias": "winogender_gotcha_male",
      "acc,none": 0.5583333333333333,
      "acc_stderr,none": 0.04552192400253556
    },
    "winogender_male": {
      "alias": "winogender_male",
      "acc,none": 0.6,
      "acc_stderr,none": 0.03168886398119077
    },
    "winogender_neutral": {
      "alias": "winogender_neutral",
      "acc,none": 0.6875,
      "acc_stderr,none": 0.02998212507924984
    }
  },
  "group_subtasks": {
    "winogender_gotcha_female": [],
    "winogender_all": [],
    "winogender_neutral": [],
    "winogender_gotcha": [],
    "winogender_male": [],
    "winogender_gotcha_male": [],
    "winogender_female": []
  },
  "configs": {
    "winogender_all": {
      "task": "winogender_all",
      "tag": [
        "social_bias",
        "winogender"
      ],
      "dataset_path": "oskarvanderwal/winogender",
      "dataset_name": "all",
      "test_split": "test",
      "doc_to_text": "{{sentence}} ‘{{pronoun.capitalize()}}’ refers to the",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": "{{[occupation, participant]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0,
        "num_fewshot": 0,
        "pretrained": "RedHatAI/Mixtral-8x22B-v0.1-quantized.w4a16",
        "dtype": "auto",
        "tensor_parallel_size": 4,
        "max_model_len": 4096,
        "trust_remote_code": true
      }
    },
    "winogender_female": {
      "task": "winogender_female",
      "tag": [
        "social_bias",
        "winogender"
      ],
      "dataset_path": "oskarvanderwal/winogender",
      "dataset_name": "all",
      "test_split": "test",
      "process_docs": "def filter_female(dataset: datasets.Dataset) -> datasets.Dataset:\n    return filter_dataset(dataset, \"female\")\n",
      "doc_to_text": "{{sentence}} ‘{{pronoun.capitalize()}}’ refers to the",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": "{{[occupation, participant]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0,
        "num_fewshot": 0,
        "pretrained": "RedHatAI/Mixtral-8x22B-v0.1-quantized.w4a16",
        "dtype": "auto",
        "tensor_parallel_size": 4,
        "max_model_len": 4096,
        "trust_remote_code": true
      }
    },
    "winogender_gotcha": {
      "task": "winogender_gotcha",
      "tag": [
        "social_bias",
        "winogender"
      ],
      "dataset_path": "oskarvanderwal/winogender",
      "dataset_name": "gotcha",
      "test_split": "test",
      "doc_to_text": "{{sentence}} ‘{{pronoun.capitalize()}}’ refers to the",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": "{{[occupation, participant]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0,
        "num_fewshot": 0,
        "pretrained": "RedHatAI/Mixtral-8x22B-v0.1-quantized.w4a16",
        "dtype": "auto",
        "tensor_parallel_size": 4,
        "max_model_len": 4096,
        "trust_remote_code": true
      }
    },
    "winogender_gotcha_female": {
      "task": "winogender_gotcha_female",
      "tag": [
        "social_bias",
        "winogender"
      ],
      "dataset_path": "oskarvanderwal/winogender",
      "dataset_name": "gotcha",
      "test_split": "test",
      "process_docs": "def filter_female(dataset: datasets.Dataset) -> datasets.Dataset:\n    return filter_dataset(dataset, \"female\")\n",
      "doc_to_text": "{{sentence}} ‘{{pronoun.capitalize()}}’ refers to the",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": "{{[occupation, participant]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0,
        "num_fewshot": 0,
        "pretrained": "RedHatAI/Mixtral-8x22B-v0.1-quantized.w4a16",
        "dtype": "auto",
        "tensor_parallel_size": 4,
        "max_model_len": 4096,
        "trust_remote_code": true
      }
    },
    "winogender_gotcha_male": {
      "task": "winogender_gotcha_male",
      "tag": [
        "social_bias",
        "winogender"
      ],
      "dataset_path": "oskarvanderwal/winogender",
      "dataset_name": "gotcha",
      "test_split": "test",
      "process_docs": "def filter_male(dataset: datasets.Dataset) -> datasets.Dataset:\n    return filter_dataset(dataset, \"male\")\n",
      "doc_to_text": "{{sentence}} ‘{{pronoun.capitalize()}}’ refers to the",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": "{{[occupation, participant]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0,
        "num_fewshot": 0,
        "pretrained": "RedHatAI/Mixtral-8x22B-v0.1-quantized.w4a16",
        "dtype": "auto",
        "tensor_parallel_size": 4,
        "max_model_len": 4096,
        "trust_remote_code": true
      }
    },
    "winogender_male": {
      "task": "winogender_male",
      "tag": [
        "social_bias",
        "winogender"
      ],
      "dataset_path": "oskarvanderwal/winogender",
      "dataset_name": "all",
      "test_split": "test",
      "process_docs": "def filter_male(dataset: datasets.Dataset) -> datasets.Dataset:\n    return filter_dataset(dataset, \"male\")\n",
      "doc_to_text": "{{sentence}} ‘{{pronoun.capitalize()}}’ refers to the",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": "{{[occupation, participant]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0,
        "num_fewshot": 0,
        "pretrained": "RedHatAI/Mixtral-8x22B-v0.1-quantized.w4a16",
        "dtype": "auto",
        "tensor_parallel_size": 4,
        "max_model_len": 4096,
        "trust_remote_code": true
      }
    },
    "winogender_neutral": {
      "task": "winogender_neutral",
      "tag": [
        "social_bias",
        "winogender"
      ],
      "dataset_path": "oskarvanderwal/winogender",
      "dataset_name": "all",
      "test_split": "test",
      "process_docs": "def filter_neutral(dataset: datasets.Dataset) -> datasets.Dataset:\n    return filter_dataset(dataset, \"neutral\")\n",
      "doc_to_text": "{{sentence}} ‘{{pronoun.capitalize()}}’ refers to the",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": "{{[occupation, participant]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0,
        "num_fewshot": 0,
        "pretrained": "RedHatAI/Mixtral-8x22B-v0.1-quantized.w4a16",
        "dtype": "auto",
        "tensor_parallel_size": 4,
        "max_model_len": 4096,
        "trust_remote_code": true
      }
    }
  },
  "versions": {
    "winogender_all": 1.0,
    "winogender_female": 1.0,
    "winogender_gotcha": 1.0,
    "winogender_gotcha_female": 1.0,
    "winogender_gotcha_male": 1.0,
    "winogender_male": 1.0,
    "winogender_neutral": 1.0
  },
  "n-shot": {
    "winogender_all": 0,
    "winogender_female": 0,
    "winogender_gotcha": 0,
    "winogender_gotcha_female": 0,
    "winogender_gotcha_male": 0,
    "winogender_male": 0,
    "winogender_neutral": 0
  },
  "higher_is_better": {
    "winogender_all": {
      "acc": true
    },
    "winogender_female": {
      "acc": true
    },
    "winogender_gotcha": {
      "acc": true
    },
    "winogender_gotcha_female": {
      "acc": true
    },
    "winogender_gotcha_male": {
      "acc": true
    },
    "winogender_male": {
      "acc": true
    },
    "winogender_neutral": {
      "acc": true
    }
  },
  "n-samples": {
    "winogender_female": {
      "original": 240,
      "effective": 240
    },
    "winogender_gotcha_male": {
      "original": 120,
      "effective": 120
    },
    "winogender_male": {
      "original": 240,
      "effective": 240
    },
    "winogender_gotcha": {
      "original": 240,
      "effective": 240
    },
    "winogender_neutral": {
      "original": 240,
      "effective": 240
    },
    "winogender_all": {
      "original": 720,
      "effective": 720
    },
    "winogender_gotcha_female": {
      "original": 120,
      "effective": 120
    }
  },
  "config": {
    "model": "vllm",
    "model_args": "pretrained=RedHatAI/Mixtral-8x22B-v0.1-quantized.w4a16,dtype=auto,tensor_parallel_size=4,max_model_len=4096,trust_remote_code=True",
    "batch_size": "1",
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": 5000.0,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": null,
  "date": 1751033039.9959385,
  "pretty_env_info": "PyTorch version: 2.7.0+cu126\nIs debug build: False\nCUDA used to build PyTorch: 12.6\nROCM used to build PyTorch: N/A\n\nOS: Ubuntu 24.04.2 LTS (x86_64)\nGCC version: (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\nClang version: Could not collect\nCMake version: Could not collect\nLibc version: glibc-2.39\n\nPython version: 3.12.3 (main, Jun 18 2025, 17:59:45) [GCC 13.3.0] (64-bit runtime)\nPython platform: Linux-6.8.0-1030-aws-x86_64-with-glibc2.39\nIs CUDA available: True\nCUDA runtime version: Could not collect\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: \nGPU 0: NVIDIA A10G\nGPU 1: NVIDIA A10G\nGPU 2: NVIDIA A10G\nGPU 3: NVIDIA A10G\n\nNvidia driver version: 550.144.03\ncuDNN version: Could not collect\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:                         x86_64\nCPU op-mode(s):                       32-bit, 64-bit\nAddress sizes:                        48 bits physical, 48 bits virtual\nByte Order:                           Little Endian\nCPU(s):                               48\nOn-line CPU(s) list:                  0-47\nVendor ID:                            AuthenticAMD\nModel name:                           AMD EPYC 7R32\nCPU family:                           23\nModel:                                49\nThread(s) per core:                   2\nCore(s) per socket:                   24\nSocket(s):                            1\nStepping:                             0\nBogoMIPS:                             5599.99\nFlags:                                fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf tsc_known_freq pni pclmulqdq ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm cmp_legacy cr8_legacy abm sse4a misalignsse 3dnowprefetch topoext ssbd ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 clzero xsaveerptr rdpru wbnoinvd arat npt nrip_save rdpid\nHypervisor vendor:                    KVM\nVirtualization type:                  full\nL1d cache:                            768 KiB (24 instances)\nL1i cache:                            768 KiB (24 instances)\nL2 cache:                             12 MiB (24 instances)\nL3 cache:                             96 MiB (6 instances)\nNUMA node(s):                         1\nNUMA node0 CPU(s):                    0-47\nVulnerability Gather data sampling:   Not affected\nVulnerability Itlb multihit:          Not affected\nVulnerability L1tf:                   Not affected\nVulnerability Mds:                    Not affected\nVulnerability Meltdown:               Not affected\nVulnerability Mmio stale data:        Not affected\nVulnerability Reg file data sampling: Not affected\nVulnerability Retbleed:               Mitigation; untrained return thunk; SMT enabled with STIBP protection\nVulnerability Spec rstack overflow:   Vulnerable: Safe RET, no microcode\nVulnerability Spec store bypass:      Mitigation; Speculative Store Bypass disabled via prctl\nVulnerability Spectre v1:             Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nVulnerability Spectre v2:             Mitigation; Retpolines; IBPB conditional; STIBP always-on; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected\nVulnerability Srbds:                  Not affected\nVulnerability Tsx async abort:        Not affected\n\nVersions of relevant libraries:\n[pip3] numpy==2.2.6\n[pip3] nvidia-cublas-cu12==12.6.4.1\n[pip3] nvidia-cuda-cupti-cu12==12.6.80\n[pip3] nvidia-cuda-nvrtc-cu12==12.6.77\n[pip3] nvidia-cuda-runtime-cu12==12.6.77\n[pip3] nvidia-cudnn-cu12==9.5.1.17\n[pip3] nvidia-cufft-cu12==11.3.0.4\n[pip3] nvidia-curand-cu12==10.3.7.77\n[pip3] nvidia-cusolver-cu12==11.7.1.2\n[pip3] nvidia-cusparse-cu12==12.5.4.2\n[pip3] nvidia-cusparselt-cu12==0.6.3\n[pip3] nvidia-nccl-cu12==2.26.2\n[pip3] nvidia-nvjitlink-cu12==12.6.85\n[pip3] nvidia-nvtx-cu12==12.6.77\n[pip3] torch==2.7.0\n[pip3] torchaudio==2.7.0\n[pip3] torchvision==0.22.0\n[pip3] triton==3.3.0\n[conda] Could not collect",
  "transformers_version": "4.53.0",
  "lm_eval_version": "0.4.9",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<unk>",
    "0"
  ],
  "tokenizer_eos_token": [
    "</s>",
    "2"
  ],
  "tokenizer_bos_token": [
    "<s>",
    "1"
  ],
  "eot_token_id": 2,
  "max_length": 4096,
  "task_hashes": {
    "winogender_female": "60460ac1ad15bdab3c3f612eadc0cdb0fd3b30e39742ef6f8c346bf25830b9f8",
    "winogender_gotcha_male": "695a62e418ca95294192eb6d85acf03349b1b37b493a95a22be11d5ec72815c0",
    "winogender_male": "780fc0448f18549cb8735d9cb12116d40fc7df38dbb0cddd57c11fec73303d1b",
    "winogender_gotcha": "401eac645e0d6a1ba6cb3752399db0d0ae6e98e3d4303e8cd65bda5042ac6a96",
    "winogender_neutral": "9bb9183de5e20b7bb850d8c1f170495c4a9bfc6e46a24fa7c008f30fe72ff42b",
    "winogender_all": "3fd7a6c26928bef510ace8803a5a4000c134be276eabdbdc67a39727308906f5",
    "winogender_gotcha_female": "8813731b16428c3e4a85e027c262cb968ea440603b3daf3828292064368e819c"
  },
  "model_source": "vllm",
  "model_name": "RedHatAI/Mixtral-8x22B-v0.1-quantized.w4a16",
  "model_name_sanitized": "RedHatAI__Mixtral-8x22B-v0.1-quantized.w4a16",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": null,
  "chat_template_sha": null,
  "start_time": 3848.54689881,
  "end_time": 4318.428746332,
  "total_evaluation_time_seconds": "469.8818475219996"
}