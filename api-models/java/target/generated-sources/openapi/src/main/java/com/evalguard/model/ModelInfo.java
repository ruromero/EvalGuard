/*
 * EvalGuard Reports API
 * API for accessing and querying model evaluation reports.  This API provides access to evaluation reports stored in the EvalGuard system, allowing clients to retrieve specific reports or query reports by various criteria such as model name, evaluation date, or task type. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.evalguard.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Information about a model
 */
@JsonPropertyOrder({
  ModelInfo.JSON_PROPERTY_NAME,
  ModelInfo.JSON_PROPERTY_SOURCE,
  ModelInfo.JSON_PROPERTY_REPORT_COUNT,
  ModelInfo.JSON_PROPERTY_LATEST_EVALUATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ModelInfo {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private String source;

  public static final String JSON_PROPERTY_REPORT_COUNT = "report_count";
  private Integer reportCount;

  public static final String JSON_PROPERTY_LATEST_EVALUATION = "latest_evaluation";
  private OffsetDateTime latestEvaluation;

  public ModelInfo() { 
  }

  public ModelInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Model name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ModelInfo source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Model source/organization
   * @return source
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSource(String source) {
    this.source = source;
  }


  public ModelInfo reportCount(Integer reportCount) {
    this.reportCount = reportCount;
    return this;
  }

   /**
   * Number of evaluation reports for this model
   * @return reportCount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REPORT_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getReportCount() {
    return reportCount;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReportCount(Integer reportCount) {
    this.reportCount = reportCount;
  }


  public ModelInfo latestEvaluation(OffsetDateTime latestEvaluation) {
    this.latestEvaluation = latestEvaluation;
    return this;
  }

   /**
   * Date of the most recent evaluation
   * @return latestEvaluation
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LATEST_EVALUATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getLatestEvaluation() {
    return latestEvaluation;
  }


  @JsonProperty(JSON_PROPERTY_LATEST_EVALUATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLatestEvaluation(OffsetDateTime latestEvaluation) {
    this.latestEvaluation = latestEvaluation;
  }


  /**
   * Return true if this ModelInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelInfo modelInfo = (ModelInfo) o;
    return Objects.equals(this.name, modelInfo.name) &&
        Objects.equals(this.source, modelInfo.source) &&
        Objects.equals(this.reportCount, modelInfo.reportCount) &&
        Objects.equals(this.latestEvaluation, modelInfo.latestEvaluation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, source, reportCount, latestEvaluation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelInfo {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    reportCount: ").append(toIndentedString(reportCount)).append("\n");
    sb.append("    latestEvaluation: ").append(toIndentedString(latestEvaluation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `source` to the URL query string
    if (getSource() != null) {
      joiner.add(String.format("%ssource%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSource()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `report_count` to the URL query string
    if (getReportCount() != null) {
      joiner.add(String.format("%sreport_count%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getReportCount()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `latest_evaluation` to the URL query string
    if (getLatestEvaluation() != null) {
      joiner.add(String.format("%slatest_evaluation%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLatestEvaluation()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

