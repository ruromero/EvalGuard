/*
 * EvalGuard Reports API
 * API for accessing and querying model evaluation reports.  This API provides access to evaluation reports stored in the EvalGuard system, allowing clients to retrieve specific reports or query reports by various criteria such as model name, evaluation date, or task type. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.evalguard.model;

import com.evalguard.model.ReportTasksInnerNSamples;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for ReportTasksInner
 */
public class ReportTasksInnerTest {
    private final ReportTasksInner model = new ReportTasksInner();

    /**
     * Model tests for ReportTasksInner
     */
    @Test
    public void testReportTasksInner() {
        // TODO: test ReportTasksInner
    }

    /**
     * Test the property 'taskRef'
     */
    @Test
    public void taskRefTest() {
        // TODO: test taskRef
    }

    /**
     * Test the property 'datasetPath'
     */
    @Test
    public void datasetPathTest() {
        // TODO: test datasetPath
    }

    /**
     * Test the property 'datasetName'
     */
    @Test
    public void datasetNameTest() {
        // TODO: test datasetName
    }

    /**
     * Test the property 'outputType'
     */
    @Test
    public void outputTypeTest() {
        // TODO: test outputType
    }

    /**
     * Test the property 'repeats'
     */
    @Test
    public void repeatsTest() {
        // TODO: test repeats
    }

    /**
     * Test the property 'shouldDecontaminate'
     */
    @Test
    public void shouldDecontaminateTest() {
        // TODO: test shouldDecontaminate
    }

    /**
     * Test the property 'unsafeCode'
     */
    @Test
    public void unsafeCodeTest() {
        // TODO: test unsafeCode
    }

    /**
     * Test the property 'nShot'
     */
    @Test
    public void nShotTest() {
        // TODO: test nShot
    }

    /**
     * Test the property 'nSamples'
     */
    @Test
    public void nSamplesTest() {
        // TODO: test nSamples
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

}
