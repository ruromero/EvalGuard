name: Stage

on:
  push:
    branches: [ main ]
    paths:
      - 'api-models/**'
      - 'schemas/**'
      - '.github/workflows/**'

jobs:
  deploy-snapshot:
    runs-on: ubuntu-latest
    name: Deploy snapshot
    if: |
      github.repository_owner == 'trustification' && 
      !startsWith(github.head_ref, 'release/')
    concurrency:
      group: deploy-snapshot
      cancel-in-progress: true
    outputs:
      java_version: ${{ steps.java-version.outputs.version }}
      typescript_version: ${{ steps.typescript-version.outputs.version }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@trustification'

      - name: Get Java project version
        id: java-version
        run: |
          cd api-models/java
          base_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          # Remove -SNAPSHOT suffix and add SHA
          version="${base_version%-SNAPSHOT}-$(echo ${{ github.sha }} | cut -c1-8)"
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "üîç Java version: $version"
          echo "üîç Commit SHA: ${{ github.sha }}"
          echo "üîç Workflow run ID: ${{ github.run_id }}"

      - name: Get TypeScript project version
        id: typescript-version
        run: |
          cd api-models/typescript
          base_version=$(node -p "require('./package.json').version")
          # Remove -SNAPSHOT suffix and add SHA
          version="${base_version%-SNAPSHOT}-$(echo ${{ github.sha }} | cut -c1-8)"
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "üîç TypeScript version: $version"

      - name: Deploy Java snapshot to GitHub
        if: github.repository == 'trustification/evalguard'
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üì¶ Deploying Java version: ${{ steps.java-version.outputs.version }}"
          cd api-models/java
          # Temporarily set the version to the SHA-based version
          mvn versions:set -DnewVersion=${{ steps.java-version.outputs.version }}
          mvn clean generate-sources compile -Dapi.version=v1
          mvn deploy -Dapi.version=v1 -B -ff -DskipTests=true
          # Reset to original version
          mvn versions:set -DnewVersion=1.0.0-SNAPSHOT

      - name: Deploy TypeScript snapshot to GitHub
        if: github.repository == 'trustification/evalguard'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üì¶ Deploying TypeScript version: ${{ steps.typescript-version.outputs.version }}"
          cd api-models/typescript
          # Temporarily set the version to the SHA-based version
          npm version ${{ steps.typescript-version.outputs.version }} --no-git-tag-version
          npm ci
          npm run generate --version v1
          npm run build
          npm publish
          # Reset to original version
          npm version 1.0.0-SNAPSHOT --no-git-tag-version

 