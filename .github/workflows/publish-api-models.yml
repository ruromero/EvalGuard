name: Publish API Models

on:
  push:
    branches: [ main ]
    paths:
      - 'api-models/**'
      - 'schemas/**'
      - '.github/workflows/publish-api-models.yml'
  workflow_dispatch:
    inputs:
      version:
        description: 'API specification version to publish (e.g., v1, v2)'
        required: true
        default: 'v1'
      publish_java:
        description: 'Publish Java models'
        required: false
        default: true
        type: boolean
      publish_typescript:
        description: 'Publish TypeScript models'
        required: false
        default: true
        type: boolean

jobs:
  publish-models:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://npm.pkg.github.com'
        scope: '@trustification'
        
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Cache npm dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Get API version
      id: api-version
      run: |
        if [ "${{ github.event.inputs.version }}" != "" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=v1" >> $GITHUB_OUTPUT
        fi
        
    - name: Build and Publish Java Models
      if: ${{ github.event.inputs.publish_java != 'false' }}
      run: |
        echo "📦 Building and publishing Java models..."
        cd api-models/java
        mvn clean generate-sources compile -Dapi.version=${{ steps.api-version.outputs.version }}
        mvn deploy -Dapi.version=${{ steps.api-version.outputs.version }} \
          -Dmaven.repo.url=https://maven.pkg.github.com/${{ github.repository }} \
          -Dmaven.repo.username=${{ github.actor }} \
          -Dmaven.repo.password=${{ secrets.GITHUB_TOKEN }} \
          -Dmaven.repo.id=github
        echo "✅ Java models published successfully"
        
    - name: Build and Publish TypeScript Models
      if: ${{ github.event.inputs.publish_typescript != 'false' }}
      run: |
        echo "📦 Building and publishing TypeScript models..."
        cd api-models/typescript
        npm ci
        npm run generate -- --version ${{ steps.api-version.outputs.version }}
        npm run build
        npm publish
        echo "✅ TypeScript models published successfully"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Summary
      run: |
        echo "🎉 API Models publishing completed!"
        echo "Version: ${{ steps.api-version.outputs.version }}"
        echo "Java models: ${{ github.event.inputs.publish_java != 'false' && '✅ Published' || '⏭️ Skipped' }}"
        echo "TypeScript models: ${{ github.event.inputs.publish_typescript != 'false' && '✅ Published' || '⏭️ Skipped' }}" 