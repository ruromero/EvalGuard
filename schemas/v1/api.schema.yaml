openapi: 3.0.3
info:
  title: EvalGuard Reports API
  description: |
    API for accessing and querying model evaluation reports.
    
    This API provides access to evaluation reports stored in the EvalGuard system,
    allowing clients to retrieve specific reports or query reports by various criteria
    such as model name, evaluation date, or task type.
  version: 1.0.0
  contact:
    name: Trustification - EvalGuard Team
    url: https://github.com/trustification/evalguard
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.evalguard.org/v1
    description: Production server
  - url: http://localhost:3000/v1
    description: Development server

paths:
  /model-cards:
    get:
      summary: List model cards
      description: |
        Retrieve a list of model cards with flexible filtering.
        Supports filtering by model name, evaluation date range, task type, metrics, dtype, and other criteria.
      operationId: listModelCards
      tags:
        - Model Cards
      parameters:
        - name: model_name  
          in: query
          description: Filter by model name
          required: true
          schema:
            type: string
          example: "meta-llama/Llama-3.1-8B-Instruct"
        - name: policy_id
          in: query
          description: Filter by policy ID
          required: false
          schema:
            type: string
          example: "default"
        - name: tasks
          in: query
          description: Filter by tasks
          required: false
          schema:
            type: string
          example: "truthfulqa_mc1"
        - name: metrics
          in: query
          description: Filter by metrics
          required: false
          schema:
            type: string
          example: "acc"
        - name: limit
          in: query
          description: Maximum number of items to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 50
        - name: offset
          in: query
          description: Number of items to skip for pagination
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
          example: 0
      responses:
        '200':
          description: List of model cards
          content:
            application/json:
              schema:
                type: object
                description: Response containing a list of model cards
                $ref: './api_types.schema.yaml#/ModelCardsResponse'
              example:
                model_cards:
                  - model:
                      id: "meta-llama/Llama-3.1-8B-Instruct"
                      name: "Llama-3.1-8B-Instruct"
                      namespace: "meta-llama"
                      description: "An 8 billion parameter instruction-tuned language model from Meta"
                      aliases:
                        - "Meta-Llama-3.1-8B-Instruct"
                      reference_links:
                        - name: "Hugging Face"
                          url: "https://huggingface.co/meta-llama/Llama-3.1-8B-Instruct"
                        - name: "ArXiv"
                          url: "https://arxiv.org/abs/2308.12950"
                    tasks:
                      truthfulqa_mc1:
                        task:
                          id: "truthfulqa_mc1"
                          name: "TruthfulQA Multiple Choice"
                          description: "Evaluates model's ability to answer questions truthfully"
                          category: "question_answering"
                          tags:
                            - "truthfulness"
                            - "multiple_choice"
                          languages:
                            - "en"
                        metrics:
                          - metric:
                              id: "acc"
                              name: "Accuracy"
                              description: "Standard accuracy metric"
                              type: "percentage"
                              direction: "higher_is_better"
                              tags:
                                - "accuracy"
                            report_ref:
                              id: "llama-3.1-8b-instruct-eval-2025-01-15"
                              type: "lm-eval-report"
                            value: 0.75
                            stderr: 0.015
                            thresholds:
                              - impact: high
                                max: 0.5
                              - impact: moderate
                                min: 0.5
                                max: 0.6
                              - impact: low
                                min: 0.6
                                max: 0.7
                          - metric:
                              id: "acc_norm"
                              name: "Normalized Accuracy"
                              description: "Accuracy normalized by human performance"
                              type: "percentage"
                              direction: "higher_is_better"
                              tags:
                                - "accuracy"
                                - "normalized"
                            report_ref:
                              id: "llama-3.1-8b-instruct-eval-2025-01-15"
                              type: "lm-eval-report"
                            value: 0.72
                            stderr: 0.016
                            thresholds:
                              - impact: high
                                max: 0.5
                              - impact: moderate
                                min: 0.5
                                max: 0.6
                              - impact: low
                                min: 0.6
                                max: 0.7
                    guardrails:
                      - id: "truthfulness-check"
                        name: "Truthfulness Verification"
                        description: "Ensures model responses are truthful and avoid hallucination"
                        target:
                          tasks:
                            - "truthfulqa_mc1"
                          metrics:
                            - "acc"
                        scope: "output"
                        instructions: "Verify that model responses are factually accurate and do not contain false information"
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'

  /guardrails:
    get:
      summary: List guardrails
      description: |
        Retrieve a list of guardrails with optional filtering by tasks and metrics.
        Guardrails are policies or operational constraints that should be applied during 
        model evaluation or deployment.
      operationId: listGuardrails
      tags:
        - Guardrails
      parameters:
        - name: tasks
          in: query
          description: Comma-separated list of task identifiers to filter guardrails
          required: false
          schema:
            type: string
          example: "truthfulqa_mc1,winogender_schemas"
        - name: metrics
          in: query
          description: Comma-separated list of metric identifiers to filter guardrails
          required: false
          schema:
            type: string
          example: "acc,acc_norm,pct_stereotype"
        - name: limit
          in: query
          description: Maximum number of items to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 50
        - name: offset
          in: query
          description: Number of items to skip for pagination
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
          example: 0
      responses:
        '200':
          description: List of guardrails
          content:
            application/json:
              schema:
                type: object
                description: Response containing a list of available guardrails
                $ref: './api_types.schema.yaml#/GuardrailsResponse'
              example:
                guardrails:
                  - id: "truthfulness-check"
                    name: "Truthfulness Verification"
                    description: "Ensures model responses are truthful and avoid hallucination"
                    target:
                      tasks:
                        - "truthfulqa_mc1"
                      metrics:
                        - "acc"
                    scope: "output"
                    instructions: "Verify that model responses are factually accurate and do not contain false information"
                pagination:
                  total: 25
                  limit: 20
                  offset: 0
                  has_more: true
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'

  /guardrails/{guardrail_id}:
    get:
      summary: Get guardrail by ID
      description: |
        Retrieve a specific guardrail by its unique identifier.
        Returns the complete guardrail including target scope, instructions, and metadata.
      operationId: getGuardrail
      tags:
        - Guardrails
      parameters:
        - name: guardrail_id
          in: path
          description: Unique identifier of the guardrail
          required: true
          schema:
            type: string
          example: "truthfulness-check"
      responses:
        '200':
          description: Guardrail details
          content:
            application/json:
              schema:
                $ref: './guardrail.schema.yaml'
              example:
                id: "truthfulness-check"
                name: "Truthfulness Verification"
                description: "Ensures model responses are truthful and avoid hallucination"
                metadata_keys:
                  - "language"
                  - "data_source"
                target:
                  tasks:
                    - "truthfulqa_mc1"
                  metrics:
                    - "acc"
                  models:
                    - "meta-llama/Llama-3.1-8B-Instruct"
                scope: "output"
                external_references:
                  - "https://arxiv.org/abs/2209.07958"
                instructions: "Verify that model responses are factually accurate and do not contain false information"
        '404':
          description: Guardrail not found
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'

  /reports/{namespace}/{model_name}:
    get:
      summary: List evaluation reports for a model
      description: |
        Retrieve a list of all evaluation reports for a specific model.
      operationId: listReports
      tags:
        - Reports
      parameters:
        - name: namespace
          in: path
          description: Namespace of the model
          required: true
          schema:
            type: string
          example: "meta-llama"
        - name: model_name
          in: path
          description: Name of the model
          required: true
          schema:
            type: string
          example: "Llama-3.1-8B-Instruct"
        - name: report_type
          in: query
          description: Type of report
          required: false
          schema:
            $ref: './api_types.schema.yaml#/ReportType'
          example: "lm-eval"
        - name: limit
          in: query
          description: Maximum number of items to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 50
        - name: offset
          in: query
          description: Number of items to skip for pagination
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
          example: 0
      responses:
        '200':
          description: List of evaluation reports
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/ReportsResponse'
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'

  /reports/{namespace}/{model_name}/lm-eval/{report_id}:
    get:
      summary: Get evaluation report by ID
      description: |
        Retrieve a specific evaluation report by its unique identifier.
        Returns the complete report including context, tasks, and results.
      operationId: getReport
      parameters:
        - name: namespace
          in: path
          description: Namespace of the model
          required: true
          schema:
            type: string
          example: "meta-llama"
        - name: model_name
          in: path
          description: Name of the model
          required: true
          schema:
            type: string
          example: "Llama-3.1-8B-Instruct"
        - name: report_id
          in: path
          description: Unique identifier of the report
          required: true
          schema:
            type: string
          example: "llama-3.1-8b-instruct-eval-2025-01-15"
      tags:
        - Reports
      responses:
        '200':
          description: Evaluation report details
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/LmEvalReport'
        '404':
          description: Report not found
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'

  /models:
    get:
      summary: List available models
      description: |
        Retrieve a list of all models that have evaluation reports in the system.
        Useful for building model selection interfaces.
      operationId: listModels
      tags:
        - Models
      parameters:
        - name: source
          in: query
          description: Filter by model source/organization
          required: false
          schema:
            type: string
          example: "meta-llama"
        - name: limit
          in: query
          description: Maximum number of items to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 50
        - name: offset
          in: query
          description: Number of items to skip for pagination
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
          example: 0
      responses:
        '200':
          description: List of models
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/ModelsInfoResponse'
              example:
                models:
                  - name: "Llama-3.1-8B-Instruct"
                    namespace: "meta-llama"
                    aliases:
                      - "Meta-Llama-3.1-8B-Instruct"
                    reference_links:
                      - name: "Hugging Face"
                        url: "https://huggingface.co/meta-llama/Llama-3.1-8B-Instruct"
                  - name: "phi-2"
                    source: "microsoft"
  
  /models/{model_id}:
    get:
      summary: Get model by ID
      description: |
        Retrieve a specific model by its unique identifier.
      operationId: getModel
      tags:
        - Models
      parameters:
        - name: model_id
          in: path
          description: Unique identifier of the model
          required: true
          schema:
            type: string
          example: "meta-llama/Llama-3.1-8B-Instruct"
      responses:
        '200':
          description: Model details
          content:
            application/json:
              schema:
                $ref: './model_info.schema.yaml'
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'

  /tasks:
    get:
      summary: List available tasks
      description: |
        Retrieve a list of all evaluation tasks available in the system.
        Useful for building task selection interfaces.
      operationId: listTasks
      tags:
        - Tasks
      parameters:
        - name: limit
          in: query
          description: Maximum number of items to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 50
        - name: offset
          in: query
          description: Number of items to skip for pagination
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
          example: 0
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/TasksResponse'
              example:
                tasks:
                  - id: "truthfulqa_mc1"
                    name: "TruthfulQA Multiple Choice"
                    description: "Evaluates model's ability to answer questions truthfully"
                    category: "question_answering"
                    tags:
                      - "truthfulness"
                      - "multiple_choice"
                    languages:
                      - "en"

  /tasks/{task_id}:
    get:
      summary: Get task by ID
      description: |
        Retrieve a specific task by its unique identifier.
      operationId: getTask
      tags:
        - Tasks
      parameters:
        - name: task_id
          in: path
          description: Unique identifier of the task
          required: true
          schema:
            type: string
          example: "truthfulqa_mc1"
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: './task_definition.schema.yaml'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'

  /metrics:
    get:
      summary: List available metrics
      description: |
        Retrieve a list of all metrics that have evaluation reports in the system.
        Useful for building metric selection interfaces.
      operationId: listMetrics
      tags:
        - Metrics
      parameters:
        - name: limit
          in: query
          description: Maximum number of items to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 50
        - name: offset
          in: query
          description: Number of items to skip for pagination
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: List of metrics
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/MetricsResponse'
              example:
                metrics:
                  - id: "acc"
                    name: "Accuracy"
                    description: "Percentage of correct predictions"
                    type: "percentage"
                    direction: "higher_is_better"
                    tags:
                      - "accuracy"
                      - "performance"
                  - id: "acc_norm"
                    name: "Normalized Accuracy"
                    description: "Accuracy normalized by human performance"
                    type: "percentage"
                    direction: "higher_is_better"
                    tags:
                      - "accuracy"
                      - "normalized"
                  - id: "pct_stereotype"
                    name: "Percentage of Stereotypes"
                    description: "Percentage of stereotypes present in the results"
                    type: "percentage"
                    direction: "lower_is_better"
                    tags:
                      - "stereotype"
  
  /metrics/{metric_id}:
    get:
      summary: Get metric by ID
      description: |
        Retrieve a specific metric by its unique identifier.
      operationId: getMetric
      tags:
        - Metrics
      parameters:
        - name: metric_id
          in: path
          description: Unique identifier of the metric
          required: true
          schema:
            type: string
          example: "acc"
      responses:
        '200':
          description: Metric details
          content:
            application/json:
              schema:
                $ref: './metric_definition.schema.yaml'
        '404':
          description: Metric not found
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'
  /policies:
    get:
      summary: List available policies
      description: |
        Retrieve a list of all policies available in the system.
      operationId: listPolicies
      tags:
        - Policies
      parameters:
        - name: limit
          in: query
          description: Maximum number of items to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 50
        - name: offset
          in: query
          description: Number of items to skip for pagination
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
          example: 0
      responses:
        '200':
          description: List of policies
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/PoliciesResponse'
              example:
                policies:
                  - id: "default-policy"
                    name: "Default Policy"
                    description: "Default policy for all contexts"
        '404':
          description: Policy not found
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'
  /policies/{policy_id}:
    get:
      summary: Get policy by ID
      description: |
        Retrieve a specific policy by its unique identifier.
      operationId: getPolicy
      tags:
        - Policies
      parameters:
        - name: policy_id
          in: path
          description: Unique identifier of the policy
          required: true
          schema:
            type: string
          example: "default-policy"
      responses:
        '200':
          description: Policy details
          content:
            application/json:
              schema:
                $ref: './policy.schema.yaml'
        '404':
          description: Policy not found
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './api_types.schema.yaml#/Error'

tags:
  - name: Reports
    description: Operations for accessing evaluation reports
  - name: Models
    description: Operations for accessing model information
  - name: Tasks
    description: Operations for accessing task information
  - name: Guardrails
    description: Operations for accessing guardrails 